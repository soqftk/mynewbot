from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from youtubesearchpython import *
from youtubesearchpython import VideosSearch, PlaylistsSearch, Search
from pytube import YouTube
from moviepy.editor import VideoFileClip
from aiogram.types import InputFile
from telegram import Audio
from telegram.ext import Updater, MessageHandler
import requests
import time
import asyncio
import urllib.request
import youtube_dl
import os
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor

TOKEN_API = "MY_TOKEN_API"

bot = Bot(TOKEN_API)
dp = Dispatcher(bot)



ikb = InlineKeyboardMarkup(row_width=2)
ikb2 = InlineKeyboardMarkup(row_width=2)
ib1 = InlineKeyboardButton(text='–ü–æ—à—É–∫', callback_data = 'search')
ib2 = InlineKeyboardButton(text='–¢–æ–ø 10 –≤ –£–∫—Ä–∞—ó–Ω—ñ',
                           callback_data = 'top')

ikb.add(ib1, ib2)



async def on_startup(_):
    print('–Ø –∑–∞–ø—É—Å—Ç–∏–ª—Å—è')
 
  

@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await message.answer("""<em>
<b>–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—à—É –¥–æ MY MUSIC BOT! ‚ô´ </b>
–¶–µ–π –±–æ—Ç –∫–æ–Ω–≤–µ—Ä—Ç—É—î –≤—ñ–¥–µ–æ,–ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —è–∫–µ –í–∏ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–µ –±–æ—Ç—É!
–ü—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø—ñ—Å–Ω—é/–ø–æ–¥–∫–∞—Å—Ç –∑ YouTube Music —Ç–∞ –±–æ—Ç —Å–∫–æ–Ω–≤–µ—Ä—Ç—É—î —Ü–µ –≤—ñ–¥–µ–æ —É mp3 —Ñ–æ—Ä–º–∞—Ç!
–Ø–∫—â–æ –í–∏ —Ö–æ—á–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—å –ø—Ä–æ –±–æ—Ç–∞ –±—ñ–ª—å—à–µ, –≤–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /help (–∞–±–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –Ω–µ—ó) </em>

""",
parse_mode="HTML",
reply_markup=ikb)
 
    await message.delete() 




@dp.message_handler(commands=['1'])
async def audio(message: types.Message):
    audio1 = open("fort.mp3", "rb")
    await bot.send_audio(message.chat.id, audio=audio1)

@dp.message_handler(commands=['2'])
async def audio(message: types.Message):
    audio2 = open("vib.mp3", "rb")
    await bot.send_audio(message.chat.id, audio=audio2)


@dp.message_handler(commands=['3'])
async def audio(message: types.Message):
    audio3 = open("man.mp3", "rb")
    await bot.send_audio(message.chat.id, audio=audio3)



@dp.message_handler(commands=['4'])
async def audio(message: types.Message):
    audio4 = open("vid.mp3", "rb")
    await bot.send_audio(message.chat.id, audio=audio4)



@dp.message_handler(commands=['5'])
async def audio(message: types.Message):
    audio5 = open("vech.mp3", "rb")
    await bot.send_audio(message.chat.id, audio=audio5)




@dp.message_handler(commands=['6'])
async def audio(message: types.Message):
    audio6 = open("tam.mp3", "rb")
    await bot.send_audio(message.chat.id, audio=audio6)



@dp.message_handler(commands=['7'])
async def audio(message: types.Message):
    audio7 = open("por.mp3", "rb")
    await bot.send_audio(message.chat.id, audio=audio7)




@dp.message_handler(commands=['8'])
async def audio(message: types.Message):
    audio8 = open("bur.mp3", "rb")
    await bot.send_audio(message.chat.id, audio=audio8)


@dp.message_handler(commands=['9'])
async def audio(message: types.Message):
    audio9 = open("gul.mp3", "rb")
    await bot.send_audio(message.chat.id, audio=audio9)


@dp.message_handler(commands=['10'])
async def audio(message: types.Message):
    audio10 = open("buz.mp3", "rb")
    await bot.send_audio(message.chat.id, audio=audio10) 



@dp.message_handler(commands=['help'])
async def help_command(message: types.Message):
    await message.answer("""
/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
/start - —Ä–æ–∑–ø–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –∑ –±–æ—Ç–æ–º
/info - —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ MY MUSIC BOT""") 
    
    await message.delete()



@dp.message_handler(commands=['info'])
async def info_command(message: types.Message):
    await message.answer("""
    <b>–ù–∞—Ä–∞–∑—ñ —Ü–µ–π –±–æ—Ç –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —è–∫ –∑–∞—Ö–∏—Å—Ç –ø—Ä–æ—î–∫—Ç—É.
–ü–æ—Ç—ñ–º —Ü–µ–π –±–æ—Ç –∑–º–æ–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∫–æ–∂–µ–Ω –æ—Ö–æ—á–∏–π!</b>
    """,
    parse_mode="HTML")   
    
    await message.delete()
 


@dp.callback_query_handler(text='search')
async def handle_search(callback_query: types.CallbackQuery):
    await callback_query.answer()
    await callback_query.message.answer("""–í–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /giveme, —â–æ–± –±–æ—Ç –ø–æ—á–∞–≤ –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏ –≤—ñ–¥–µ–æ, –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —è–∫–µ –í–∏ –π–æ–º—É —Å–∫–∏–Ω–µ—Ç–µ.
–í–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /dont, —â–æ–± –±–æ—Ç –∑–∞–∫—ñ–Ω—á–∏–≤ —Ä–æ–±–∏—Ç–∏ —Ü—é —Ñ—É–Ω–∫—Ü—ñ—é, —â–æ–± –ø–µ—Ä–µ–π—Ç–∏ –¥–æ —ñ–Ω—à–∏—Ö.""")






@dp.message_handler(commands=['giveme'])
async def enable_convert(message: types.Message):
    global convert_enabled
    convert_enabled = True
    await message.answer("–ë—É–¥—å –ª–∞—Å–∫–∞, —Å–∫–∏–Ω—å—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø—ñ—Å–Ω—é —É YouTube Music")





@dp.message_handler(commands=['dont'])
async def disable_convert(message: types.Message):
    global convert_enabled
    convert_enabled = False
    await message.answer("–§—É–Ω–∫—Ü—ñ—è –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞–Ω–Ω—è –∑–∞–∫—ñ–Ω—á–∏–ª–∞—Å—è")




@dp.message_handler()
async def run(message: types.Message):
    global convert_enabled

    if convert_enabled:
        if "https://music.youtube.com" not in message.text:
            await message.answer("–°–∫–∏–Ω—å—Ç–µ –±–æ—Ç—É –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Å–∞–º–µ –∑ YouTube Music!")
            return

        await message.answer("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—á–µ–∫–∞–π—Ç–µ")

        video_info = youtube_dl.YoutubeDL().extract_info(
            url=message.text, download=False
        )
        filename = f"{video_info['title']}.mp3"
        options = {
            'format': 'bestaudio/best',
            'keepvideo': False,
            'outtmpl': filename,
        }

        with youtube_dl.YoutubeDL(options) as ydl:
            ydl.download([video_info['webpage_url']])

        print("–í–∂–µ... {}".format(filename))
    
        with open(filename, 'rb') as audio_file:
            await message.reply_audio(audio_file)

        os.remove(filename)
        convert_enabled = False
    else:
        await message.answer("–ù–µ–¥—ñ–π—Å–Ω–∞ –∫–æ–º–∞–Ω–¥–∞. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /giveme –¥–ª—è –≤–≤—ñ–º–∫–Ω–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞–Ω–Ω—è")




@dp.callback_query_handler(text='top')
async def handle_top(callback_query: types.CallbackQuery):
    await callback_query.message.answer(text="""
    üá∫üá¶<b>–¢–æ–ø 10 –≤ –£–∫—Ä–∞—ó–Ω—ñ</b>üá∫üá¶
–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –æ–¥–Ω—É —ñ–∑ —Ü–∏—Ñ—Ä, —â–æ–± –æ–±—Ä–∞—Ç–∏ –ø—ñ—Å–Ω—é
/1.  –ê–Ω—Ç–∏—Ç—ñ–ª–∞ - –§–æ—Ä—Ç–µ—Ü—è –ë–∞—Ö–º—É—Ç
/2.  –°–∫—Ä—è–±—ñ–Ω & Yurcash, Sowa - –í–∏–±–∞—á
/3.  –ê—Ä—Ç–µ–º –ü–∏–≤–æ–≤–∞—Ä–æ–≤ - –ú–∞–Ω—ñ—Ñ–µ—Å—Ç
/4.  PARFENIUK - –í—ñ–¥—Ä–∏–≤–∞—é—á–∏—Å—å
/5.  100–ª–∏—Ü—è & Skylerr - –í–µ—á–æ—Ä–Ω–∏—Ü—ñ (–î–æ–±—Ä–∏–π –¥–µ–Ω—å everybody)
/6.  –ê—Ä—Ç–µ–º –ü–∏–≤–æ–≤–∞—Ä–æ–≤, NK (–ù–∞—Å—Ç—è –ö–∞–º–µ–Ω—Å—å–∫–∏—Ö) - –¢–∞–º –£ –¢–æ–ø–æ–ª—ñ
/7.  YAKTAK x KOLA - –ü–æ—Ä—ñ—á–∫–∞
/8.  SHUMEI x ZLATA OGNEVICH - –ë—É—Ä–µ–≤—ñ—è–º–∏
/9.  Kozak Siromaha - –ì—É–ª—è–ª–∏
/10. Memories Avenue, –ê—Ä—Ç–µ–º –õ–æ—ñ–∫ - –ë—É–∑–∏–Ω–∞
    
    """,
    parse_mode="HTML")




if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=False, on_startup=on_startup) 